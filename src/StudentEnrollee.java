/*************************************************************************
 * Title: PIMA Community College Student Enrollee class
 * File: StudentEnrollee.java
 * Author: James Eli
 * Date: 9/1/2016
 *
 * This is a PIMA Community College Student Enrollee class that includes 
 * instance fields for ID and grade. The fields are all defined as private. 
 * The class includes accessors and mutators for all of the fields. 
 * Extensive input validation is performed to assure the fields are in an 
 * acceptable format and range. This class implements serialization, and 
 * overrides the toString method().  
 *
 * Notes:
 *  (1) Uses StringBuilder, so not multithreaded safe.
 *  (2) Compiled with java SE JDK 8, Update 102 (JDK 8u102).
 * 
 * Submitted in partial fulfillment of the requirements of PCC CIS-131.
 *************************************************************************
 * Change Log:
 *   09/1/2016: Initial release. JME
 *************************************************************************/
import java.io.Serializable; // Permits serializing the class.

public class StudentEnrollee implements Serializable {
  // Constants.
  private static final long serialVersionUID = 1L; // Serialization ID generated by eclipse (Mars).  
  public static final int MIN_GRADE = 0; // Minimum student grade value.
  public static final int MAX_GRADE = 4; // Maximum student grade value.
  /*********************************************************************
   * Instance fields (all private)
   *********************************************************************/
  private int studentID;    // Student ID (cannot be negative).
  private int studentGrade; // Student grade ( MIN_GRADE to MAX_GRADE ).
  
  /*********************************************************************
   * Class constructors.
   *********************************************************************/
  // 2 parameter class constructor. Throws IllegalArgumentException for 
  // either integer<0 and grade>4.
  public StudentEnrollee( int id, int grade ) { 
    if ( id < 0 ) // Throw exception for impossible id.
      throw new IllegalArgumentException( "ID can't be < 0." );
    else
      studentID = id;
    if ( grade < MIN_GRADE || grade > MAX_GRADE ) // Throw exception for impossible grade.
      throw new IllegalArgumentException( "Grade must be >=0 and <=4." );
    else
      studentGrade = grade;
  }

  // Naked constructor.
  public StudentEnrollee() { 
    this( 0, 0 ); // Initialize StudentEnrollee fields.
  }

  /*********************************************************************
   * Class mutators.
   *********************************************************************/
  // Throws IllegalArgumentException for id<0.
  public void setStudentID( int id ) throws IllegalArgumentException {
    if ( id < 0 ) // Throw exception for impossible id.
      throw new IllegalArgumentException( "ID can't be < 0." );
    else
      studentID = id;
  }

  // Throws IllegalArgumentException for grade<0 or grade>4.
  public void setStudentGrade( int grade ) throws IllegalArgumentException {
    if ( grade < MIN_GRADE || grade > MAX_GRADE ) // Throw exception for impossible grade.
      throw new IllegalArgumentException( "Grade must be >=0 and <=4." );
    else
      studentGrade = grade;
  }
  
  /*********************************************************************
   * Class accessors.
   *********************************************************************/
  public int getStudentID() { return studentID; }
  public int getStudentGrade() { return studentGrade; }

  /*********************************************************************
   * Overridden methods.
   *********************************************************************/
  @Override
  // Override toString method.
  public String toString() {
    // Create empty builder.
    StringBuilder s = new StringBuilder();
    // Build string.
    s.append( "Student ID          : " + studentID + "\r\n" );
    s.append( "Student grade       : " + studentGrade + "\r\n" );
    // Convert to String and return.
    return s.toString();
  }
  
}
